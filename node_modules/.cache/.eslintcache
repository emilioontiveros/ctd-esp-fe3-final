[{"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\index.jsx":"1","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\App.jsx":"2","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Footer.jsx":"3","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Navbar.jsx":"4","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Contact.jsx":"5","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Form.jsx":"6","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Detail.jsx":"7","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Favs.jsx":"8","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Card.jsx":"9","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Home.jsx":"10","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\utils\\global.context.jsx":"11","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\navigation\\Routes.js":"12","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Layout.jsx":"13"},{"size":373,"mtime":1670652828095,"results":"14","hashOfConfig":"15"},{"size":446,"mtime":1670652752529,"results":"16","hashOfConfig":"15"},{"size":1658,"mtime":1670652439880,"results":"17","hashOfConfig":"15"},{"size":4159,"mtime":1670652489584,"results":"18","hashOfConfig":"15"},{"size":491,"mtime":1670652543057,"results":"19","hashOfConfig":"15"},{"size":1807,"mtime":1670652458134,"results":"20","hashOfConfig":"15"},{"size":2508,"mtime":1670652570351,"results":"21","hashOfConfig":"15"},{"size":1257,"mtime":1670652659115,"results":"22","hashOfConfig":"15"},{"size":1973,"mtime":1670652403831,"results":"23","hashOfConfig":"15"},{"size":858,"mtime":1670652681483,"results":"24","hashOfConfig":"15"},{"size":769,"mtime":1670652369577,"results":"25","hashOfConfig":"15"},{"size":1100,"mtime":1670652509125,"results":"26","hashOfConfig":"15"},{"size":305,"mtime":1670652691538,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12cxy29",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\index.jsx",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\App.jsx",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Footer.jsx",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Navbar.jsx",["71"],[],"import Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Box, Button, Drawer, IconButton, List, ListItem, ListItemButton, ListItemText } from '@mui/material';\nimport { routes } from '../navigation/Routes';\nimport { ContextGlobal } from './utils/global.context';\nimport { useContext, useState } from 'react';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nconst drawerWidth = 240;\n\nconst Navbar = (props) => {\n\n  const { window } = props;\n  const { state, dispatch } = useContext(ContextGlobal);\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\n      <List sx={state.theme === \"light\" ? \n      {backgroundColor: \"white\"} : \n      {backgroundColor: \"black\"}}>\n        {routes.map((item) => {\n          if (item.title !== \"Detail\") {\n            return (\n            <Link key={item.id} to={item.path} style={{textDecoration: \"none\", fontSize: \"1.2rem\", color: \"black\"}}>\n              <ListItem  disablePadding>\n                  <ListItemButton sx={{ textAlign: 'center' }}>\n                    <ListItemText primary={item.title} sx={state.theme === \"light\" ? {color: \"black\"} : {color: \"white\"}}/>\n                  </ListItemButton>\n              </ListItem>\n            </Link>\n            )\n          }\n        })}\n        <Button variant=\"contained\" \n          onClick={() => dispatch({type: state.theme})}\n          sx={state.theme === \"light\" ? \n          {backgroundColor: \"black\", \"&:hover\": {backgroundColor: \"white\", color: \"black\"}} : \n          {backgroundColor: \"white\", color: \"black\", \"&:hover\": {backgroundColor: \"black\", color: \"white\"}}}\n          >\n          {state.theme === \"light\" ? \"ðŸŒ™\" : \"â˜€\"}\n        </Button>\n      </List>\n    </Box>\n  )\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box sx={{width: \"100%\"}}>\n      <AppBar position='static' sx={{width: \"100%\"}}>\n        <Toolbar sx={{display: \"flex\", color: \"white\", justifyContent: \"space-between\"}}>\n          <Typography\n            variant=\"h4\"\n            component=\"div\"\n          >\n            <span style={{color: \"red\"}}>D</span>H Odonto\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: 'none' } }}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Box sx={{ display: { xs: 'none', sm: 'flex' }, alignItems: \"center\", justifyContent: \"space-around\", width: \"50%\"}}>\n            {routes.map(({ id, path, title }) => title !== \"Detail\" ?\n             <Link key={id} to={path}\n             style={{textDecoration: \"none\", fontSize: \"1.2rem\", color: \"white\"}}\n             >\n              {title}\n              </Link> \n             : \"\")}\n            <Button variant=\"contained\" \n            onClick={() => dispatch({type: state.theme})}\n            sx={state.theme === \"light\" ? \n            {backgroundColor: \"black\", \"&:hover\": {backgroundColor: \"white\", color: \"black\"}} : \n            {backgroundColor: \"white\", color: \"black\", \"&:hover\": {backgroundColor: \"black\", color: \"white\"}}}\n            >\n              {state.theme === \"light\" ? \"ðŸŒ™\" : \"â˜€\"}\n            </Button>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Box component=\"nav\">\n        <Drawer\n        container={container}\n        variant=\"temporary\"\n        open={mobileOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{keepMounted: true}}\n        sx={state.theme === \"light\" ? \n        {display: { xs: 'block', sm: 'none' }, '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth }} : \n        {display: { xs: 'block', sm: 'none' }, '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth, backgroundColor: \"black\" }}\n        }\n        >\n          {drawer}\n        </Drawer>\n      </Box>\n    </Box>\n  );\n}\nexport default Navbar;","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Contact.jsx",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Form.jsx",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Detail.jsx",["72"],[],"import React, { useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { ContextGlobal } from '../Components/utils/global.context'\nimport axios from 'axios'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nconst Detail = () => {\n \n  const [data, setData] = useState(null); \n  const { state } = useContext(ContextGlobal);\n  const { id } = useParams();\n\n  const getData = () => {\n    axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then(res => setData(res.data))\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  return (\n    <div\n    className={state.theme} \n    style={{ height: \"75vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"start\", alignItems: \"center\"}}>\n      <h1 style={{margin: \"60px 0\"}}>Detail Dentist {data?.name}</h1>\n      <TableContainer sx={{display: \"flex\", justifyContent: \"center\"}}>\n      <Table aria-label=\"simple table\" className={state.theme}  sx={{width: \"80vw\"}}>\n        <TableHead>\n          <TableRow>\n            <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">Name</TableCell>\n            <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">Email</TableCell>\n            <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">Phone</TableCell>\n            <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">Website</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n              <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">{data?.name}</TableCell>\n              <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">{data?.email}</TableCell>\n              <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">{data?.phone}</TableCell>\n              <TableCell sx={state.theme === \"light\" ? { color: \"black\" } : { color: \"white\" }} align=\"left\">{data?.website}</TableCell>\n            </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  )\n}\n\nexport default Detail","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Favs.jsx",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\Card.jsx",["73"],[],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ContextGlobal } from \"./utils/global.context\";\n\nconst Card = ({ name, username, id }) => {\n\n  const navigate = useNavigate();\n  const { state, dispatch } = useContext(ContextGlobal);\n  const [favorito, setFavorito] = useState(false);\n  const [update, setUpdate] = useState(false);\n\n  const addFav = () => {\n    const favoritos = localStorage.getItem(\"favoritos\");\n    if (favoritos) {\n      let listaParseada = JSON.parse(favoritos);\n      const listaFiltrada = listaParseada.filter(item => item.id !== id);\n      const existe = listaFiltrada.length !== listaParseada.length;\n      existe ? listaParseada = listaFiltrada : listaParseada.push({name: name, username: username, id: id});\n      localStorage.setItem(\"favoritos\", JSON.stringify(listaParseada));\n      dispatch({\n        type: \"FAVS\",\n        payload: {\n          ...state,\n          favs: listaParseada\n        }\n      })\n    } else {\n      localStorage.setItem(\"favoritos\", JSON.stringify([{name: name, username: username, id: id}]))\n      dispatch({\n        type: \"FAVS\",\n        payload: {\n          ...state,\n          favs: [{name: name, username: username, id: id}]\n        }\n      })\n    }\n    setFavorito(!favorito)\n    setUpdate(!update)\n  }\n\n  useEffect(() => {\n    const favoritos = localStorage.getItem(\"favoritos\");\n    if (favoritos) {\n      const lista = JSON.parse(favoritos)\n      const cardEncontrada = lista.find(item => item.id === id);\n      if (cardEncontrada) {\n        setFavorito(true)\n      }\n    }\n  }, [update])\n\n  return (\n    <div className=\"card\">\n      <img src=\"./images/doctor.jpg\" alt=\"doctor\" onClick={() => navigate(`/dentist/${id}`)}/>\n      <h4>{name}</h4>\n      <p>{username}</p>\n      <button onClick={addFav} className={favorito ? \"favButton added\" : \"favButton\"}>{favorito ? \"Fav\" : \"Add fav\"}</button>\n    </div>\n  )\n  \n\n};\n\nexport default Card;\n","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Home.jsx",["74"],[],"import axios from 'axios'\nimport React, { useEffect, useContext } from 'react'\nimport Card from '../Components/Card'\nimport { ContextGlobal } from '../Components/utils/global.context'\n\nconst Home = () => {\n\n  const { state, dispatch } = useContext(ContextGlobal);\n\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => {\n      dispatch({\n        type: \"API_HOME\",\n        payload: {\n          ...state,\n          data: res.data,\n        }\n      })\n    })\n  }, [])\n\n  return (\n    <main className={state.theme} style={{padding: \"20px\"}}>\n      <h1 style={{textAlign: \"center\"}}>Home</h1>\n      <div className='card-grid'>\n        {state.data.map(doctor => (\n          <Card key={doctor.id} id={doctor.id} name={doctor.name} username={doctor.username}/>\n        ))}\n      </div>\n    </main>\n  )\n}\n\nexport default Home","C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Components\\utils\\global.context.jsx",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\navigation\\Routes.js",[],[],"C:\\Users\\pc\\Desktop\\FrontIII\\fe3-final-main\\src\\Routes\\Layout.jsx",[],[],{"ruleId":"75","severity":1,"message":"76","line":27,"column":28,"nodeType":"77","messageId":"78","endLine":27,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":25,"column":6,"nodeType":"81","endLine":25,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":50,"column":6,"nodeType":"81","endLine":50,"endColumn":14,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":21,"column":6,"nodeType":"81","endLine":21,"endColumn":8,"suggestions":"86"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["89"],{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [getData]",{"range":"96","text":"97"},"Update the dependencies array to be: [id, update]",{"range":"98","text":"99"},"Update the dependencies array to be: [dispatch, state]",{"range":"100","text":"101"},[816,818],"[getData]",[1613,1621],"[id, update]",[503,505],"[dispatch, state]"]